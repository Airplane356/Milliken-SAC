{"ast":null,"code":"var _jsxFileName = \"/Users/Eric/Milliken-SAC/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport format from \"date-fns/format\";\nimport getDay from \"date-fns/getDay\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport React, { useState } from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport '../styles/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst events = [\n// Format new events like this:\n// {\n//     title: \"\",\n//     allDay: true/false,\n//     start: new Date(year, month, day, hour, minute, second),\n//     end: new Date(year, month, day, hour, minute, second),\n// },\n{\n  title: \"Sacentine\",\n  allDay: true,\n  start: new Date(2024, 1, 14),\n  end: new Date(2024, 1, 14)\n}];\nconst calenderStyle = {\n  height: 700,\n  margin: \"60px\",\n  fontFamily: \"Inter\"\n};\nfunction SACCalendar() {\n  _s();\n  const [allEvents] = useState(events);\n  const [style] = useState(calenderStyle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"calendar\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: allEvents,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      views: [\"month\", \"agenda\"],\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(SACCalendar, \"WTgTr2fGhgK83BHlFXSt6acO/4M=\");\n_c = SACCalendar;\nexport default SACCalendar;\nvar _c;\n$RefreshReg$(_c, \"SACCalendar\");","map":{"version":3,"names":["format","getDay","parse","startOfWeek","React","useState","Calendar","dateFnsLocalizer","jsxDEV","_jsxDEV","locales","require","localizer","events","title","allDay","start","Date","end","calenderStyle","height","margin","fontFamily","SACCalendar","_s","allEvents","style","class","children","startAccessor","endAccessor","views","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Eric/Milliken-SAC/src/components/Calendar.js"],"sourcesContent":["\nimport format from \"date-fns/format\";\nimport getDay from \"date-fns/getDay\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport React, { useState } from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport '../styles/Calendar.css';\n\nconst locales = {\n    \"en-US\": require(\"date-fns/locale/en-US\"),\n};\nconst localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales,\n});\n\nconst events = [\n// Format new events like this:\n// {\n//     title: \"\",\n//     allDay: true/false,\n//     start: new Date(year, month, day, hour, minute, second),\n//     end: new Date(year, month, day, hour, minute, second),\n// },\n    {\n        title: \"Sacentine\",\n        allDay: true,\n        start: new Date(2024, 1, 14),\n        end: new Date(2024, 1, 14),\n    },\n\n];\n\nconst calenderStyle = {\n    height: 700, \n    margin: \"60px\",\n    fontFamily: \"Inter\",\n}\n\nfunction SACCalendar() {\n    const [allEvents] = useState(events);\n    const [style] = useState(calenderStyle);\n\n    return (\n        <div class=\"calendar\">\n            <Calendar localizer={localizer} events={allEvents} startAccessor=\"start\" endAccessor=\"end\" views={[\"month\", \"agenda\"]} style={style} />\n        </div>\n    );\n}\n\nexport default SACCalendar;\n"],"mappings":";;AACA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC/D,OAAO,mDAAmD;AAC1D,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAG;EACZ,OAAO,EAAEC,OAAO,CAAC,uBAAuB;AAC5C,CAAC;AACD,MAAMC,SAAS,GAAGL,gBAAgB,CAAC;EAC/BP,MAAM;EACNE,KAAK;EACLC,WAAW;EACXF,MAAM;EACNS;AACJ,CAAC,CAAC;AAEF,MAAMG,MAAM,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACI;EACIC,KAAK,EAAE,WAAW;EAClBC,MAAM,EAAE,IAAI;EACZC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;EAC5BC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC7B,CAAC,CAEJ;AAED,MAAME,aAAa,GAAG;EAClBC,MAAM,EAAE,GAAG;EACXC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE;AAChB,CAAC;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,CAAC,GAAGpB,QAAQ,CAACQ,MAAM,CAAC;EACpC,MAAM,CAACa,KAAK,CAAC,GAAGrB,QAAQ,CAACc,aAAa,CAAC;EAEvC,oBACIV,OAAA;IAAKkB,KAAK,EAAC,UAAU;IAAAC,QAAA,eACjBnB,OAAA,CAACH,QAAQ;MAACM,SAAS,EAAEA,SAAU;MAACC,MAAM,EAAEY,SAAU;MAACI,aAAa,EAAC,OAAO;MAACC,WAAW,EAAC,KAAK;MAACC,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAE;MAACL,KAAK,EAAEA;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtI,CAAC;AAEd;AAACX,EAAA,CATQD,WAAW;AAAAa,EAAA,GAAXb,WAAW;AAWpB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}